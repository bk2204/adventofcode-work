#!/usr/bin/ruby

require 'set'

module AdventOfCode
  module D13
    class Seater
      def initialize
        @pairs = {}
        @parties = Set.new
      end

      def parse(s)
        m = /^(\S+) would (gain|lose) (\d+) happiness.*next to (\S+)\./.match s
        raise 'Invalid' unless m
        pair = [m[1], m[4]]
        @parties << m[1]
        @parties << m[4]
        magnitude = m[3].to_i
        @pairs[pair] = m[2] == 'lose' ? -magnitude : magnitude
      end

      def optimal_happiness
        parties = @parties.to_a
        count = parties.count
        choices = []
        parties.permutation do |p|
          value = 0
          p.each_with_index do |party, i|
            pair = [party, p[(i + 1) % count]]
            value += @pairs[pair] + @pairs[pair.reverse]
          end
          choices << value
        end
        choices.max
      end
    end
  end
end

def script
  p = AdventOfCode::D13::Seater.new
  $stdin.each_line do |line|
    p.parse(line)
  end
  puts "Optimal happiness is: #{p.optimal_happiness}"
  return 0
end

exit script(*ARGV) if __FILE__ == $0
